name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

env:
  NODE_ENV: "test"
  MYSQL_DATABASE: "db"
  MYSQL_ROOT_PASSWORD: "password"
  DATABASE_URL: "mysql://root:password@127.0.0.1:3306/db"
  NEXTAUTH_SECRET: "4AxM2+jQEjsNV1+1ascFa0gfkUoJZTpFhLHulUGMNB8="
  NEXTAUTH_URL: "http://localhost:3000"
  DISCORD_CLIENT_ID: ""
  DISCORD_CLIENT_SECRET: ""

jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
  test-unit:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: npm ci
      - name: Run Jest
        run: npm run test:jest
  test-e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:latest
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    defaults:
      run:
        working-directory: ./
  
    container:
      image: mcr.microsoft.com/playwright:v1.30.0-focal
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, webkit, firefox]

    steps:
      - uses: actions/checkout@v3

      - name: Verify MariaDB connection
        env:
          PORT: ${{ job.services.mariadb.ports[3306] }}
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
            sleep 1
          done

      - uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      - name: Install dependencies
        run: npm ci
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Migrate DB
        run: npx prisma migrate dev
      - name: Run Playwright tests
        run: npx playwright test --project=${{ matrix.project }}
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: playwright-test-results
          path: ./playwright-report/
