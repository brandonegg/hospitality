name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
env:
  DATABASE_URL: "file:./db.sqlite"
  NEXTAUTH_SECRET: "4AxM2+jQEjsNV1+1ascFa0gfkUoJZTpFhLHulUGMNB8="
  NEXTAUTH_URL: "http://localhost:3000"
  DISCORD_CLIENT_ID: ""
  DISCORD_CLIENT_SECRET: ""
jobs:
  lint:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: npm ci
      - name: Run linter
        run: npm run lint
  test-unit:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: npm ci
      - name: Run Jest
        run: npm run test:jest
  test-e2e:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    container:
      image: mcr.microsoft.com/playwright:v1.30.0-focal
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, webkit, firefox]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v2
      with:
        node-version: '16.x'
    - name: Install dependencies
      run: npm ci
    - name: Get installed Playwright version
      id: playwright-version
      run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }}
    - uses: actions/upload-artifact@v2
      if: always()
      with:
        name: playwright-test-results
        path: ./playwright-report/